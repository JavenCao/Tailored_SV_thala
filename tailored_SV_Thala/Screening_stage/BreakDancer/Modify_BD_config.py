from Modify_BD_config import *
import pandas as pd
import numpy as np
import sys


def Remove_outliers_BD_config(path2hist):
    """
Description: exclude insert size larger than 4kpb, and then re-calculate statistics
input: raw histogram file generated by BD
return: mean, std, lower, upper
    """
    insert_df = pd.read_csv(path2hist, header=None)
    inset_vector = np.array(insert_df)
    clean_inset_vector = np.array([c for c in inset_vector if c < 4000])
    mean_val = np.around(clean_inset_vector.mean(), decimals=1)
    std_val = np.around(clean_inset_vector.std(), decimals=1)
    lower_val = 0.0
    upper_val = mean_val + 5 * std_val
    return mean_val, std_val, lower_val, upper_val


def Fun_BD_config(path2hist, path2cfg, path2newcfg):
    """
Description: change mean, std, lower, upper values for BD_config files that do not follow normal distribution
input: path2hist: the histogram file generated by breakdancer_bam2cfg.pl
       path2cfg: raw config files
       path2newcfg: newly created breakdancer config files
return: path2newcfg
    """
    mean_val, std_val, lower_val, upper_val = Remove_outliers_BD_config(
        path2hist)

    fp = open(path2cfg, 'rb')
    cfg_line = fp.readline()
# build a dict for config
    config_dict = {}
    div = cfg_line.rstrip("\n").split("\t")
    for pair in div:
        key_value = pair.split(":")[0]
        value_value = pair.split(":")[1]
        config_dict[key_value] = value_value

# change mean, std, lower, upper
    config_dict['lower'] = lower_val
    config_dict['upper'] = upper_val
    config_dict['mean'] = mean_val
    config_dict['std'] = std_val

# new config line
    newline = 'readgroup:' + str(config_dict['readgroup']) + "\t" + \
        'platform:' + str(config_dict['platform']) + "\t" + \
        'map:' + str(config_dict['map']) + "\t" + \
        'readlen:' + str(config_dict['readlen']) + "\t" + \
        'lib:' + str(config_dict['lib']) + "\t" + \
        'num:' + str(config_dict['num']) + "\t" + \
        'lower:' + str(config_dict['lower']) + "\t" + \
        'upper:' + str(config_dict['upper']) + "\t" + \
        'mean:' + str(config_dict['mean']) + "\t" + \
        'std:' + str(config_dict['std']) + "\t" + \
        'SWnormality:' + str(config_dict['SWnormality']) + "\t" + \
        'flag:' + str(config_dict['flag']) + "\t" + \
        'exe:' + str(config_dict['exe']) + "\t" + '\n'

    fout = open(path2newcfg, "wb")
    fout.write(newline)
    return 0


if __name__ == '__main__':
    path2hist = sys.argv[1]
    path2cfg = sys.argv[2]
    path2newcfg = sys.argv[3]
    print path2hist
    Fun_BD_config(path2hist, path2cfg, path2newcfg)
else:
    pass
